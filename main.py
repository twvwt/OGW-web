import logging
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("TOKEN")
WEBAPP_URL = "https://yourdomain.com/index_1.html"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
DB_LITE = os.getenv("DB_LITE")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)
logger = logging.getLogger(__name__)

async def set_main_menu():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é –±–æ—Ç–∞"""
    main_menu_commands = [
        types.BotCommand(command='/start', description='üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É'),
        types.BotCommand(command='/menu', description='üì± –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
        types.BotCommand(command='/help', description='‚ùì –ü–æ–º–æ—â—å'),
        types.BotCommand(command='/contacts', description='üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'),
    ]
    await bot.set_my_commands(main_menu_commands)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="üì± –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
            web_app=WebAppInfo(url=WEBAPP_URL)
        )
    )
    keyboard.row(
        InlineKeyboardButton(
            text="üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", 
            url="https://t.me/OGWPLUS")
        )
    
    await message.answer(
        f"üëã <b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!</b>\n\n"
        "‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>OGWPLUS</b> - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω —Ç–µ—Ö–Ω–∏–∫–∏ Apple –∏ —Ä–µ–º–æ–Ω—Ç–∞.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
        reply_markup=keyboard.as_markup()
    )

@dp.message(Command("menu"))
async def cmd_menu(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(
            text="üì± –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
            web_app=WebAppInfo(url=WEBAPP_URL)
        )
    )
    keyboard.row(
        InlineKeyboardButton(text="üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", url="https://t.me/OGWPLUS"),
        InlineKeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help"),
        InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="basket")
    )
    
    await message.answer(
        "üìã <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:</b>",
        reply_markup=keyboard.as_markup()
    )

@dp.callback_query(lambda c: c.data == "contacts")
async def process_contacts(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ö–æ–Ω—Ç–∞–∫—Ç—ã"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    )
    
    await callback.message.edit_text(
        "üìû <b>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n\n"
        "üìç <u>–ê–¥—Ä–µ—Å–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤:</u>\n"
        "‚Ä¢ –ú–æ—Å–∫–≤–∞, –ë–∞–≥—Ä–∞—Ç–∏–æ–Ω–æ–≤—Å–∫–∏–π –ø—Ä–æ–µ–∑–¥ 7–∫2, –ë–¶ –†—É–±–∏–Ω\n"
        "‚Ä¢ –ú–æ—Å–∫–≤–∞, –°—É—â–µ–≤—Å–∫–∏–π –≤–∞–ª 5—Å1, 5 –ø–æ–¥—ä–µ–∑–¥, 2 —ç—Ç–∞–∂\n\n"
        "üì± <u>–¢–µ–ª–µ—Ñ–æ–Ω:</u> +7 (910) 447-79-78\n"
        "‚úâÔ∏è <u>Telegram:</u> @OGWPLUS\n\n"
        "üïí <u>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</u> –µ–∂–µ–¥–Ω–µ–≤–Ω–æ 11:00-20:00",
        reply_markup=keyboard.as_markup()
    )
    await callback.answer()

@dp.callback_query(lambda c: c.data == "help")
async def process_help(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–æ–º–æ—â—å"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    )
    
    await callback.message.edit_text(
        "‚ùì <b>–ü–æ–º–æ—â—å:</b>\n\n"
        "1. –ù–∞–∂–º–∏—Ç–µ <b>'–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'</b> –¥–ª—è –≤—Ö–æ–¥–∞\n"
        "2. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ:\n"
        "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤ üõçÔ∏è\n"
        "   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É üõí\n"
        "   ‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ üí≥\n"
        "   ‚Ä¢ –ó–∞–ø–∏—Å—å –Ω–∞ —Ä–µ–º–æ–Ω—Ç üõ†Ô∏è\n\n"
        "üÜò –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ –≤ @OGWPLUS",
        reply_markup=keyboard.as_markup()
    )
    await callback.answer()

@dp.callback_query(lambda c: c.data == "back_to_menu")
async def process_back_to_menu(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥"""
    await cmd_menu(callback.message)
    await callback.answer()

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    await set_main_menu()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")